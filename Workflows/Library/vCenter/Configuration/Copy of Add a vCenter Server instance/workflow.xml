<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:workflow xmlns:ns2="http://vmware.com/vco/workflow" root-name="item4" object-name="workflow:name=generic" id="02bc458a-89dc-4094-9ac7-6f10581942cf" editor-version="2.0" version="1.1.13" api-version="6.0.0" allowed-operations="vef" restartMode="0" resumeFromFailedMode="0">
    <display-name>Copy of Add a vCenter Server instance</display-name>
    <description>Configures Orchestrator to connect to a new vCenter Server instance, so that you can run workflows over the objects in the vSphere infrastructure.</description>
    <position y="50.0" x="100.0"/>
    <input>
        <param name="enabled" type="boolean">
            <description>Enables this vCenter Server instance for orchestration</description>
        </param>
        <param name="host" type="string">
            <description>IP or host name of the vCenter Server instance to add</description>
        </param>
        <param name="port" type="number">
            <description>HTTPS port of the vCenter Server instance</description>
        </param>
        <param name="path" type="string">
            <description>Location of the SDK to use to connect to the vCenter Server instance</description>
        </param>
        <param name="sessionPerUser" type="boolean">
            <description>Specifies the method to manage user access to the vCenter Server system. If this is set to false, the method is share a unique session.</description>
        </param>
        <param name="userName" type="string">
            <description>User name of the user that Orchestrator will use to connect to the vCenter Server instance.</description>
        </param>
        <param name="password" type="SecureString">
            <description>Password of the user that Orchestrator will use to connect to the vCenter Server instance.</description>
        </param>
        <param name="domain" type="string">
            <description>Domain name. This is used only if method session per user is set</description>
        </param>
        <param name="ignoreCertificateWarnings" type="boolean">
            <description>If set to true,the vCenter Server instance certificate is accepted silently and the certificate is added to the trusted store</description>
        </param>
        <param name="httpPort" type="number">
            <description>Deprecated. Not used</description>
        </param>
        <param name="pbmUrl" type="string">
            <description>URL of PBM endpoint</description>
        </param>
        <param name="smsUrl" type="string">
            <description>URL of SMS endpoint</description>
        </param>
    </input>
    <output>
        <param name="newInstance" type="VC:SdkConnection">
            <description>Registered vCenter Server instance</description>
        </param>
    </output>
    <attrib name="hostAndPort" type="string">
        <value encoded="n"></value>
    </attrib>
    <attrib name="errorCode" type="string">
        <value encoded="n"></value>
    </attrib>
    <attrib name="serviceUrls" type="Array/string">
        <value encoded="n"/>
    </attrib>
    <attrib name="certificateImportException" type="string">
        <value encoded="n"></value>
    </attrib>
    <workflow-item name="item0" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="45.40909090909091" x="944.5"/>
    </workflow-item>
    <workflow-item name="item1" out-name="item0" type="task" comparator="0">
        <display-name>Register vCenter Server instance</display-name>
        <script encoded="false">newInstance = VcPlugin.registerVCenterServerInstance(enabled, host, port, path, sessionPerUser, userName, password, domain, pbmUrl, smsUrl);</script>
        <in-binding>
            <bind name="enabled" type="boolean" export-name="enabled"/>
            <bind name="host" type="string" export-name="host"/>
            <bind name="port" type="number" export-name="port"/>
            <bind name="path" type="string" export-name="path"/>
            <bind name="sessionPerUser" type="boolean" export-name="sessionPerUser"/>
            <bind name="userName" type="string" export-name="userName"/>
            <bind name="password" type="SecureString" export-name="password"/>
            <bind name="domain" type="string" export-name="domain"/>
            <bind name="pbmUrl" type="string" export-name="pbmUrl"/>
            <bind name="smsUrl" type="string" export-name="smsUrl"/>
        </in-binding>
        <out-binding>
            <bind name="newInstance" type="VC:SdkConnection" export-name="newInstance"/>
        </out-binding>
        <position y="55.40909090909091" x="764.5"/>
    </workflow-item>
    <workflow-item name="item4" out-name="item6" type="task" comparator="0">
        <display-name>combine host and port and generate vSphere services list</display-name>
        <script encoded="false">var servicesUrlsArray = [];
var u = new URL();
hostAndPort = u.escapeHost(host) + ":" + port;

servicesUrlsArray.push(hostAndPort);

if (pbmUrl &amp;&amp; pbmUrl.trim()) {
  servicesUrlsArray.push(pbmUrl.trim());
}

if (smsUrl &amp;&amp; smsUrl.trim()) {
  servicesUrlsArray.push(smsUrl.trim());
}

serviceUrls = servicesUrlsArray;</script>
        <in-binding>
            <bind name="host" type="string" export-name="host"/>
            <bind name="port" type="number" export-name="port"/>
            <bind name="pbmUrl" type="string" export-name="pbmUrl"/>
            <bind name="smsUrl" type="string" export-name="smsUrl"/>
        </in-binding>
        <out-binding>
            <bind name="hostAndPort" type="string" export-name="hostAndPort"/>
            <bind name="serviceUrls" type="Array/string" export-name="serviceUrls"/>
        </out-binding>
        <position y="55.40909090909091" x="224.5"/>
    </workflow-item>
    <workflow-item name="item2" out-name="item1" catch-name="item3" throw-bind-name="errorCode" type="task" comparator="0">
        <display-name>Validate</display-name>
        <script encoded="false">if (enabled) {
    VcPlugin.validateConnection(host , port , path , userName , password);

    if (pbmUrl &amp;&amp; pbmUrl.trim()) {
       VcPlugin.validatePbmServiceAvailability(pbmUrl);
    }

    if (smsUrl &amp;&amp; smsUrl.trim()) {
        VcPlugin.validateSmsServiceAvailability(smsUrl);
    }
}

 </script>
        <in-binding>
            <bind name="enabled" type="boolean" export-name="enabled"/>
            <bind name="host" type="string" export-name="host"/>
            <bind name="port" type="number" export-name="port"/>
            <bind name="path" type="string" export-name="path"/>
            <bind name="userName" type="string" export-name="userName"/>
            <bind name="password" type="SecureString" export-name="password"/>
            <bind name="pbmUrl" type="string" export-name="pbmUrl"/>
            <bind name="smsUrl" type="string" export-name="smsUrl"/>
        </in-binding>
        <out-binding/>
        <description>Validate connection information.</description>
        <position y="55.40909090909091" x="624.5"/>
    </workflow-item>
    <workflow-item name="item3" throw-bind-name="errorCode" type="end" end-mode="1" business-status="Connection validation failed" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="109.04545454545453" x="664.5"/>
    </workflow-item>
    <workflow-item name="item6" out-name="item2" catch-name="item5" throw-bind-name="certificateImportException" type="foreach" comparator="0">
        <display-name>Foreach (Import a certificate from URL)</display-name>
        <in-binding>
            <bind name="url" type="Array/string" export-name="*serviceUrls">
                <description>URL or just host:port for non-HTTPS SSL services:</description>
            </bind>
            <bind name="ignoreWarnings" type="boolean" export-name="ignoreCertificateWarnings">
                <description>If set to true, the certificate is accepted silently and the certificate is added to the trusted store</description>
            </bind>
        </in-binding>
        <out-binding/>
        <description>Imports an SSL certificate into the server trust store.</description>
        <reference id="c5a874a2-e8e7-480d-bdde-d1a80b8a3011" type="Workflow"/>
        <position y="55.40909090909091" x="424.5"/>
    </workflow-item>
    <workflow-item name="item5" throw-bind-name="certificateImportException" type="end" end-mode="1" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="109.04545454545453" x="465.0"/>
    </workflow-item>
</ns2:workflow>
